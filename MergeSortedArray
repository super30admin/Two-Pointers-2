class Solution {
    /* Approach: As both arrays are sorted and we want to merge them in a single array  having extra space in the end, 
    we can start comparing elements from the tail of both  the arrays and whichever is the larget elemnt  add it to the end of the first array.
     
     Time complexity : o(m+n)
     space complexity :(1)
     */

    public void merge(int[] nums1, int m, int[] nums2, int n) {

    int p1=m-1;
    int p2=n-1;
    int p3= m+n-1;
        while(p1>=0 && p2>=0){
            if(nums1[p1]> nums2[p2]){
                nums1[p3]=nums1[p1];
                p1--;

            }else{
                nums1[p3]=nums2[p2];
                p2--;
            }
             p3--;
        }

        //case where nums2 left with some elemnts then copy it into p1

        while(p2>=0){
            nums1[p3--]=nums2[p2--];
        }
        
    }
}
