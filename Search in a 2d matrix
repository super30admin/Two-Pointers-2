//time O(n)
// space O(1)
// yes
// start at left top or right bottom corner which has increasing / decreasing directions strictly. 
//if starting from top left, go to bottom row in the same column if target > current element.
//if starting from top left, go to left column in the same row if target < current element. continue this process till you reach bottom left corner.

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int row = matrix.length;
        int col = matrix[0].length;
        int i =0, j= col-1;  //starting from top right we will check we reach bottom row or leftmost column
        
        while(i < row && j >=0){
            if(matrix[i][j] == target){
                return true;
            }else if (matrix[i][j] < target){
                i++;
            }else{
                j--;
            }
            
        }
        return false;
        
    }
}
