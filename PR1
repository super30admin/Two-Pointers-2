/* Time Complexity : O(n) - where n is the number of elements.
   Space Complexity : O(1) - no extra space used.
   Did this code successfully run on Leetcode : Yes.
/ Any problem you faced while coding this : no
   Your code here along with comments explaining your approach: I used a two pointer approach. */

class Solution {
    public int removeDuplicates(int[] nums) {
        if(nums.length==0 || nums==null) return 0;
            int j=1;
            int count=1;
            for(int i=1;i<nums.length;i++){
                if(nums[i]==nums[i-1]){
                    count++;
                }
                else{
                    count=1;
                }
                
                if(count<=2){
                       nums[j]=nums[i];
                       j++;
                   }
            }
        return j;
        }
    }
